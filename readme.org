#+STARTUP: inlineimages

* Roadmap
** DONE Samples
** DONE Process samples
** DONE Menus etc...
** Data transformation
- stft
- peak frequencies
** SVM
- SVC with probabilities
** Noise filtering
If needed. Truncating frequiencies with small amplitude might be enough.
** Record function 
Train model on multiple live recordings of a sound.

* Libraries
- numpy
- scipy
- matplotlib
- scikit-learn
- sounddevice

* Project Files
|-----------------+-----------------------------------------|
| Name            | Description                             |
|-----------------+-----------------------------------------|
| main.py         | load all modules, launch program        |
| tape_plotter.py | TapePlotter - plot real-time recording  |
| waves.py        | Reads and Transformations of audio data |
|-----------------+-----------------------------------------|



#+INCLUDE: "waves.py" src python
#+INCLUDE: "tape_plotter.py" src python
#+INCLUDE: "main.py" src python

* Notes
 Some samples (Clap, Laugh, Whistle) were found in
 [[https://github.com/laurent-george/protolab_sound_recognition][protolab_sound_recognition project]]. All rights belong to their
 respective owners.
